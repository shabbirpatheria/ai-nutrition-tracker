/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  GetV1WorkoutsEventsQueryResponse,
  GetV1WorkoutsEventsQueryParams,
  GetV1WorkoutsEventsHeaderParams,
  GetV1WorkoutsEvents500,
} from '../types/GetV1WorkoutsEvents.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getGetV1WorkoutsEventsUrl() {
  return `/v1/workouts/events` as const
}

/**
 * @description Returns a paginated array of workout events, indicating updates or deletions.
 * @summary Retrieve a paged list of workout events (updates or deletes) since a given date. Events are ordered from newest to oldest. The intention is to allow clients to keep their local cache of workouts up to date without having to fetch the entire list of workouts.
 * {@link /v1/workouts/events}
 */
export async function getV1WorkoutsEvents(
  headers: GetV1WorkoutsEventsHeaderParams,
  params?: GetV1WorkoutsEventsQueryParams,
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<GetV1WorkoutsEventsQueryResponse, ResponseErrorConfig<GetV1WorkoutsEvents500>, unknown>({
    method: 'GET',
    url: getGetV1WorkoutsEventsUrl().toString(),
    params,
    ...requestConfig,
    headers: { ...headers, ...requestConfig.headers },
  })
  return res.data
}