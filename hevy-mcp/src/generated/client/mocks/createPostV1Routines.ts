/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { PostV1RoutinesHeaderParams, PostV1Routines400, PostV1Routines403, PostV1RoutinesMutationResponse } from '../types/PostV1Routines.ts'
import { createPostRoutinesRequestBody } from './createPostRoutinesRequestBody.ts'
import { createRoutine } from './createRoutine.ts'
import { faker } from '@faker-js/faker'

export function createPostV1RoutinesHeaderParams(data?: Partial<PostV1RoutinesHeaderParams>): PostV1RoutinesHeaderParams {
  return {
    ...{ 'api-key': faker.string.uuid() },
    ...(data || {}),
  }
}

/**
 * @description The routine was successfully created
 */
export function createPostV1Routines201() {
  return createRoutine()
}

/**
 * @description Invalid request body
 */
export function createPostV1Routines400(data?: Partial<PostV1Routines400>): PostV1Routines400 {
  return {
    ...{ error: faker.string.alpha() },
    ...(data || {}),
  }
}

/**
 * @description Routine limit exceeded
 */
export function createPostV1Routines403(data?: Partial<PostV1Routines403>): PostV1Routines403 {
  return {
    ...{ error: faker.string.alpha() },
    ...(data || {}),
  }
}

export function createPostV1RoutinesMutationRequest() {
  return createPostRoutinesRequestBody()
}

export function createPostV1RoutinesMutationResponse(data?: Partial<PostV1RoutinesMutationResponse>): PostV1RoutinesMutationResponse {
  return data || faker.helpers.arrayElement<any>([createPostV1Routines201()])
}