/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { workoutSchema } from './workoutSchema.ts'
import { z } from 'zod'

export const getV1WorkoutsQueryParamsSchema = z.object({
  page: z.coerce.number().int().default(1).describe('Page number (Must be 1 or greater)'),
  pageSize: z.coerce.number().int().default(5).describe('Number of items on the requested page (Max 10)'),
})

export const getV1WorkoutsHeaderParamsSchema = z.object({
  'api-key': z.string().uuid(),
})

/**
 * @description A paginated list of workouts
 */
export const getV1Workouts200Schema = z.object({
  page: z.number().int().describe('Current page number').optional(),
  page_count: z.number().int().describe('Total number of pages').optional(),
  workouts: z.array(z.lazy(() => workoutSchema)).optional(),
})

/**
 * @description Invalid page size
 */
export const getV1Workouts400Schema = z.any()

export const getV1WorkoutsQueryResponseSchema = z.lazy(() => getV1Workouts200Schema)